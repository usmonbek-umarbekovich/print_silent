name: Build & Release Silent Printer

on:
  push:
    tags:
      - 'v*' # only build when a tag like v1.0.0 is pushed
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: node18-win-x64
            ext: exe
          - os: ubuntu-latest
            target: node18-linux-x64
            ext: tar.gz
          - os: ubuntu-latest
            target: node18-linux-arm64
            ext: tar.gz
          - os: macos-latest
            target: node18-macos-x64
            ext: tar.gz
          - os: macos-latest
            target: node18-macos-arm64
            ext: tar.gz

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install pkg
        run: npm install -g pkg

      - name: Build with pkg
        run: pkg . --targets ${{ matrix.target }} --output dist/silent-printer-${{ matrix.target }}

      - name: Install Inno Setup
        if: matrix.os == 'windows-latest'
        run: choco install innosetup

      - name: Create Windows Installer
        if: matrix.os == 'windows-latest'
        run: iscc installer.iss

      - name: Decode PFX certificate
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $pfxBase64 = '${{ secrets.CERTIFICATE_PFX }}'
          [IO.File]::WriteAllBytes('cert.pfx', [Convert]::FromBase64String($pfxBase64))

      - name: Find signtool path
        if: matrix.os == 'windows-latest'
        id: signtoolpath
        shell: pwsh
        run: |
          $paths = Get-ChildItem "C:\Program Files (x86)\Windows Kits\10\bin\" -Directory | Sort-Object Name -Descending
          $latest = $paths[0].FullName
          echo "path=$latest\x64\signtool.exe" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Sign Windows Installer
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          & "${{ steps.signtoolpath.outputs.path }}" sign /f cert.pfx /p ${{ secrets.CERTIFICATE_PASSWORD }} /tr http://timestamp.digicert.com /td sha256 /fd sha256 dist/silent-printer-win-x64-installer.exe
 
      - name: Upload Windows Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: silent-printer-win-x64-installer
          path: dist/silent-printer-win-x64-installer.exe

      - name: Upload Linux/macOS Archives
        if: matrix.ext == 'tar.gz'
        uses: actions/upload-artifact@v4
        with:
          name: silent-printer-${{ matrix.target }}
          path: dist/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
